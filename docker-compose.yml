services:
  rabbitmq:
    image: rabbitmq:3.12-management-alpine
    hostname: rabbitmq
    environment:
      RABBITMQ_DEFAULT_USER: ${RABBITMQ_USER}
      RABBITMQ_DEFAULT_PASS: ${RABBITMQ_PASS}
      RABBITMQ_DEFAULT_VHOST: ${RABBITMQ_VHOST}
    ports:
      - '5672:5672' # AMQP
      - '15672:15672' # Management UI
    healthcheck:
      test: rabbitmq-diagnostics -q ping
      interval: 30s
    volumes:
      - rabbitmq_data:/var/lib/rabbitmq

  auth:
    build:
      context: .
      dockerfile: apps/auth/Dockerfile
    depends_on:
      rabbitmq:
        condition: service_healthy
    env_file:
      - .env.docker
    environment:
      NODE_ENV: production

  api-gateway:
    build:
      context: .
      dockerfile: apps/api-gateway/Dockerfile
    ports:
      - '3000:3000'
    depends_on:
      rabbitmq:
        condition: service_healthy
    env_file:
      - .env.docker
    environment:
      NODE_ENV: production

volumes:
  rabbitmq_data:
